OpenShadingLanguage 1.00
# Compiled by oslc 1.7.0dev
shader phongbsdf
param	color	Color	0.80000001 0.80000001 0.80000001		%read{3,3} %write{2147483647,-1}
param	float	Exponent	0		%read{2,2} %write{2147483647,-1}
param	normal	Normal	0 0 0		%read{1,2} %write{0,0} %initexpr
oparam	closure color	BSDF			%read{2147483647,-1} %write{1,3} %initexpr
global	normal	N	%read{0,0} %write{2147483647,-1}
const	string	$const1	"diffuse"		%read{1,1} %write{2147483647,-1}
temp	closure color	$tmp1	%read{3,3} %write{2,2}
const	string	$const2	"phong"		%read{2,2} %write{2147483647,-1}
code Normal
# phong.osl:6
# 	normal Normal = N,
	assign		Normal N 	%filename{"phong.osl"} %line{6} %argrw{"wr"}
code BSDF
# phong.osl:7
# 	output closure color BSDF = diffuse(Normal)
	closure		BSDF $const1 Normal 	%filename{"phong.osl"} %line{7} %argrw{"wrr"}
code ___main___
# phong.osl:10
# BSDF = Color*phong(Normal, Exponent);
	closure		$tmp1 $const2 Normal Exponent 	%filename{"phong.osl"} %line{10} %argrw{"wrrr"}
	mul		BSDF $tmp1 Color 	%argrw{"wrr"}
	end
